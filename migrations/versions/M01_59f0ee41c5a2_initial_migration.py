"""Initial migration

Revision ID: 59f0ee41c5a2
Revises: 
Create Date: 2021-10-03 15:46:45.126884

"""
import sqlalchemy as sa
from alembic import op

from app.config import Permissions
from app.security import get_password_hash

# revision identifiers, used by Alembic.
revision = "59f0ee41c5a2"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    permissions_table = op.create_table(
        "permissions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_permissions_id"), "permissions", ["id"], unique=False)
    users_table = op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("password", sa.String(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    users_permissions_table = op.create_table(
        "users_permissions",
        sa.Column("users_id", sa.Integer(), nullable=True),
        sa.Column("permissions_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["permissions_id"],
            ["permissions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["users_id"],
            ["users.id"],
        ),
    )
    # ### end Alembic commands ###

    if permissions_table is not None:
        op.bulk_insert(permissions_table, [{"id": 1, "name": Permissions.admin_permission}])
    if users_table is not None:  # TODO Remvoe for release version.
        op.bulk_insert(
            users_table,
            [
                {"id": 1, "email": "admin", "password": get_password_hash("qwerty")},
                {"id": 2, "email": "user", "password": get_password_hash("qwerty")},
            ],
        )
    if users_permissions_table is not None:
        op.bulk_insert(users_permissions_table, [{"users_id": 1, "permissions_id": 1}])


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("users_permissions")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_permissions_id"), table_name="permissions")
    op.drop_table("permissions")
    # ### end Alembic commands ###
